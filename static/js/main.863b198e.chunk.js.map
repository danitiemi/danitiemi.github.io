{"version":3,"sources":["components/NavBar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js","images/me.jpg"],"names":["NavBar","react_default","a","createElement","className","href","target","rel","Component","Header","src","me","alt","Footer","class","App","components_NavBar","components_Header","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6PAkBeA,0LAbX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAyBH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAA3D,cAC1CN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAuBH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+CAA+CC,OAAO,SAAQC,IAAI,uBAA1E,YACxCN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAqBH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,iCAAR,sBAR7BG,8BCkBNC,mLAbX,OACIR,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKO,IAAKC,IAAIC,IAAI,mBAAmBR,UAAU,kBAC/CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,sBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,0FACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,qEATSI,aCgBNK,mLAfX,OACEZ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+BAA+BO,IAAI,SAASN,OAAO,SAASC,IAAI,uBAAsBN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAC/GH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,iCAAiCO,IAAI,WAAWN,OAAO,SAASC,IAAI,uBAAsBN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BACnHH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,wCAAwCO,IAAI,WAAWN,OAAO,SAASC,IAAI,uBAAsBN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAC1HH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,uCAAuCO,IAAI,YAAYN,OAAO,SAASC,IAAI,uBAAsBN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAE5HH,EAAAC,EAAAC,cAAA,KAAGW,MAAM,aAAT,+BAXaN,aCkBNO,mLAZX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,eAPQV,aCIEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCE3HnBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.863b198e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass NavBar extends Component {\n  \n  render() {\n    return (\n      <div className=\"main-nav\">    \n        <ul className=\"nav\">\n            <li><i className=\"fas fa-laptop-code\"></i><a href=\"https://github.com/danitiemi\" target=\"_blank\" rel=\"noopener noreferrer\"> Projects</a></li>\n            <li><i className=\"far fa-file-code\"></i><a href=\"https://resume.creddle.io/resume/irnesg6czb4\" target=\"_blank\"rel=\"noopener noreferrer\"> Resume</a></li>\n            <li><i className=\"far fa-id-card\"></i><a href=\"mailto:danitiemi.br@gmail.com\"> Contact</a></li>\n        </ul>     \n      </div>\n    )\n  }\n\n}\n\nexport default NavBar","import React, { Component } from 'react'\nimport me from '../images/me.jpg'\n\n\nclass Header extends Component {\n\n  render() {\n    return (\n        <header>\n          <div className=\"welcome\">\n            <img src={me} alt=\"My anime version\" className=\"profile-image\"/> \n            <h1 className=\"tag-name\">Hi, I’m Dani!</h1>\n            <h2 className=\"text\">I’m a Full-stack Web Developer who loves design, food, good music and travelling.</h2>\n            <h2 className=\"superpower\">My superpower is my determination to make things happen.</h2>\n          </div>         \n        </header>\n    )\n  }\n}\n\nexport default Header","import React, { Component } from 'react'\n\nclass Footer extends Component {\n\n  render() {\n    return (\n      <footer>\n        <ul>\n          <li><a href=\"https://github.com/danitiemi\" alt=\"Github\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github-square\"></i></a></li>\n          <li><a href=\"https://dribbble.com/danitiemi\" alt=\"Dribbble\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-dribbble-square\"></i></a></li>\n          <li><a href=\"https://www.linkedin.com/in/danitiemi\" alt=\"LinkedIn\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin\"></i></a></li>\n          <li><a href=\"https://instagram.com/whereisit.dani\" alt=\"Instagram\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-instagram\"></i></a></li>\n        </ul>\n        <p class=\"copyright\">&copy;2018 Dani Tiemi</p>\n      </footer>\n    )\n  }\n\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport './styles/App.scss'\nimport NavBar from './components/NavBar'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"background\">\n          <NavBar />\n          <Header />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me.e78fc7c0.jpg\";"],"sourceRoot":""}